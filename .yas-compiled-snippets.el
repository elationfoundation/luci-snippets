;;; Compiled snippets and support files for `luci-mode'
;;; Snippet definitions:
;;;
(yas-define-snippets 'luci-mode
					 '(("README" "Yasnippet LuCI snippets.\n\nIN DEVELOPMENT!!!\n\nSee http://luci.subsignal.org/trac/wiki/Documentation for full LuCI documentation.\n\n\nThe LuCI CBI library has many undocumented features. During my last development push one of my coworkers suggested I put some of my extensive notes into snippets so that they would be able to see the possible options available to them at a glance.\n\nUsage\n\nCBI Snippets\n=============\n\nmap\n-----\nCreates a generic map object.\n\nform\n-----\nCreates a simple form.\n\ndelegator\n---------\nCreates a delegator\n\nsection\n-------\nCreates one of the predefined section objects. \n\noption\n------\nCreates one of the predefined option objects. \n\nattr\n------\nUse attr to access special map, section, and option attributes.\n\nmethod\n--------\nUse method to access special map, section, and option methods.\n\nController Snippets\n====================\n\nentry\n--------\nCreate a generic entry for a cbi controller's index.\n\nparam\n--------\nUse param to get a list of cbi, template, or call paramiters/formatting.\n\nTemplate snippets\n==================\n\nenv\n-------\nA list of the environment variables that can be passed to a template.\n\nThis is a incomplete (and occationaly erronious) set of snippets that I am working on to help new LuCI developers make the most of the robust, but undocumented, code base. Please be careful to read over the finalized code produced by these snippets as it is still in development, and the occational extra or missing quote or paren is not out of the question.\n\nTODO:\n\n * There are a lot of options that are available, but not useful except for edge cases. Possibly remove them or reorganize them to better support development.\n\n * These snippets need to be terse enough to not lead new users off of crazy edge cases, but in-depth enough to encourage problem solving and code spelunking to find the right solution before giving up and creating their own code heavy templates.\n\n" "README" nil nil nil nil nil nil)
					   ("attr" "${1:optnName}.${2:$$(yas/choose-value '(\"template\" ;; The htm template to use (ALL)\n \"null\" ;; Value can be empty\n \"default\" ;; The default value (Value, Flag)\n \"size\" ;; The size of the input fields (ListValue)\n \"rmempty\" ;; Unset value if empty (All)\n \"optional\" ;; This value is optional (Value, Flag)\n \"vallist\" ;; A table of value, key pairs (Value, ListValue, MultiValue, StaticList, DynamicList)\n \"keylist\" ;; A table of key, value pairs (Value, ListValue, MultiValue, StaticList, DynamicList)\n \"value\" ;; The value to display (DummyValue)\n \"enabled\" ;; The value to write if the box is checked (Flag)\n \"disabled\" ;; The value used to signify that the option should be deleted or written to the file (Flag)\n \"widget\" ;; The widget that will be used (select, radio) (ListValue, MultiValue,StaticList)\n \"delimiter\" ;;The delimiter that will separate the values (default: \" \") (MultiValue, StaticList)\n \"override_scheme\"\n \"rows\" ;; Literally the number of rows (TextValue)\n \"inputstyle\" ;; class=\"cbi-input-<%=self.inputstyle or \"button\" %>\" (Button)\n \"maxlength\" ;; The maximum length (Value)\n ))} = ${3:value} $0\n" "option attributes" nil nil nil nil nil nil)
					   ("delegator" "${1:Delegator Name} = Delegator()\n\n$1:add(\"${2:Page Name}\", \"${1:Path to CBI file}\")\n$0\n\nreturn $1" "Delegator opbject" nil nil nil nil nil nil)
					   ("form" "${1:form_name} = Form(\"${2:config file}\", translate(\"${3:title}\"), translate(\"${4:description}\", ${5:data})\n$0\n\nreturn $1" "Form object" nil nil nil nil nil nil)
					   ("map" "${1:m} = Map(\"${2:config}\", translate(\"${3:title}\"), translate(\"${4:description}\"))\n$0\n\nreturn $1" "Map Object" nil nil nil nil nil nil)
					   ("delegator" "{${1:d}} = Delegator()\n$0\n\nreturn $1" "Delegator (Generic)" nil nil nil nil nil nil)
					   ("subopt" "${1:optnName}${2:$$(yas/choose-value '(\".template \" \".value\" \".href\" \".maxlength\" \".depends\"  \".optional\" \".default\" \".rmempty\" \".manditory\" \".additional\" \".add_error\" \".validate\" \".transform\" \".remove\" \".write\"))} = ${3:value} $0\n\n" "\"DummyValue\" Option Params" nil nil nil nil nil nil)
					   ("subopt" "${1:optnName}${2:$$(yas/choose-value '(\".template\" \".valuelist\" \".reset_values\" \".vallist\" \".keylist\" \".maxlength\" \".depends\" \".cast\" \".optional\" \".default\" \".rmempty\" \".size\" \".manditory\" \".additional\" \".add_error\" \".validate\" \".transform\" \".remove\" \".write\"))})  = ${3:value}$0\n" "\"DynamicList\" Option Params" nil nil nil nil nil nil)
					   ("subopt" "${1:optnName}${2:$$(yas/choose-value '(\".template\" \".depends\" \".manditory\" \".add_error\" \".validate\" \".transform\" \".remove\" \".write\"))})  = ${3:value}$0\n" "\"FileBrowser\" Option Params" nil nil nil nil nil nil)
					   ("subopt" "${1:optnName}${2:$$(yas/choose-value '(\".template\" \".rmempty\" \".depends\" \".optional\" \".default\"  \".size\" \".manditory\" \".additional\" \".add_error\" \".validate\" \".transform\" \".remove\" \".write\"))})  = ${3:value}$0\n" "\"FileUpload\" Option Params (NOT MULTI-USE CURRENTLY)" nil nil nil nil nil nil)
					   ("subopt" "${1:optnName}${2:$$(yas/choose-value '(\".template \".widget\" \".reset_values\" \".vallist\" \".keylist\" \".maxlength\" \".depends\" \".cast\" \".optional\" \".default\" \".rmempty\" \".size\" \".manditory\" \".additional\" \".add_error\" \".validate\" \".transform\" \".remove\" \".write\"))})  = ${3:$$(yas/choose-value '(\"select\" \"radio\" ))}$0\n" "\"ListValue\" Option Params" nil nil nil nil nil nil)
					   ("subopt" "${1:optnName}${2:$$(yas/choose-value '(\".template \".widget\" \".delimiter\" \".valuelist\" \".reset_values\" \".vallist\" \".keylist\" \".maxlength\" \".depends\" \".cast\" \".optional\" \".default\" \".rmempty\" \".size\" \".manditory\" \".additional\" \".add_error\" \".validate\" \".transform\" \".remove\" \".write\"))})  = ${3:$$(yas/choose-value '(\"select\" \"checkbox\"))}$0\n" "\"MultiValue\" Option Params" nil nil nil nil nil nil)
					   ("simpleform" "{${1:s}} = SimpleForm(\"${2:name}\", translate(\"${3:title}\"), translate(\"${4:description}\", ${5:data})\n$0\n\nreturn $1" "SimpleForm (Generic)" nil nil nil nil nil nil)
					   ("subopt" "${1:simpleFormName}${2:$$(yas/choose-value '(\":section\" \":field\" \":set\" \":del\" \":get\" \":get_scheme\"))}(${3:section, option, value})$0\n" "\"SimpleForm\" Functions Params" nil nil nil nil nil nil)
					   ("subopt" "${1:optnName}${2:$$(yas/choose-value '(\".template\" \".depends\" \".manditory\" \".add_error\" \".validate\" \".transform\" \".remove\" \".write\"))})  = ${3:value}$0\n" "\"FileBrowser\" Option Params" nil nil nil nil nil nil)
					   ("subopt" "${1:optnName}${2:$$(yas/choose-value '(\".template \".widget\" \".delimiter\" \".valuelist\" \".override_scheme\" \".reset_values\" \".vallist\" \".keylist\" \".maxlength\" \".depends\" \".cast\" \".optional\" \".default\" \".rmempty\" \".size\" \".manditory\" \".additional\" \".add_error\" \".validate\" \".transform\" \".remove\" \".write\"))})  = ${3:$$(yas/choose-value '(\"select\" \"checkbox\"))}$0\n" "\"StaticList\" Option Params" nil nil nil nil nil nil)
					   ("subopt" "${1:optnName}${2:$$(yas/choose-value '(\".template\" \".rows\" \".maxlength\" \".depends\" \".cast\" \".optional\" \".default\" \".rmempty\" \".size\" \".manditory\" \".additional\" \".add_error\" \".validate\" \".transform\" \".remove\" \".write\"))})  = ${3:value}$0\n" "\"TextValue\" Option Params" nil nil nil nil nil nil)
					   ("subopt" "${1:optnName}${2:$$(yas/choose-value '(\".template\" \".inputstyle\" \".inputtitle\" \".rmempty\" \".depends\" \".optional\" \".default\"  \".size\" \".manditory\" \".additional\" \".add_error\" \".validate\" \".transform\" \".remove\" \".write\"))})  = ${3:value}$0\n" "\"Button\" Option Params" nil nil nil nil nil nil)
					   ("entry" "entry(${1:path}, call(${2:function name}, {${3:arguments}}), title=translate(\"${4:Menu Title}\"), order=${5:10})${6:$$(yas/choose-value '(\".i18n\" \".dependent\" \".leaf\" \".sysauth\" ))}\n\n$0\n" "Call Entry (with arguments section)" nil nil nil nil nil nil)
					   ("entry" "entry(${1:path}, cbi(${2:cbi file loc}, ${3:$$(yas/choose-value '(\"noheader=true\" \"nofooter=true\" \"on_success_to=NODE_NAME\" \"on_changed_to=NODE_NAME\" \"on_valid_to\" \"autoapply=true\"))}), title=translate(\"${4:Menu Title}\"), order=${5:10})${6:$$(yas/choose-value '(\".i18n\" \".dependent\" \".leaf\" \".sysauth\" ))}\n\n$0\n" "CBI Entry (with CBI extra params)" nil nil nil nil nil nil)
					   ("copyright" "--[[\n	Copyright (C) ${1:year} Seamus Tuohy $0\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program. If not, see <http://www.gnu.org/licenses/>.\n]]--" "copyright" nil nil nil nil nil nil)
					   ("delegator" "${1:delegatorName}${2:$$(yas/choose-value '(\":add\" \":insert_after\" \":set\" \":set_route\" \":get\" \":parse\" \":get_next\" \":get_prev\" \":get_chain\" \":get_active\"))}(${3:$$(yas/choose-value '(\"<add> name, node\" \"<insert_after> name, after\" \"<get> name\" \"<get_next/prev> state\"))})" "Delegator functions" nil nil nil nil nil nil)
					   ("delegator" "${1:delegatorName}${2:$$(yas/choose-value '(\".template\" \".allow_reset\" \".allow_cancel\" \".allow_back\" \".allow_finish\" \".readinput\" \".pageaction\" \".defaultpath\"))})  = ${3:value}$0" "Delegator Options" nil nil nil nil nil nil)
					   ("entry" "entry({${1:path}}, ${2:$$(yas/choose-value '(\"cbi\" \"template\" \"call\"))}(${3:value}), translate(\"${4:Menu Title}\"), ${5:10})${6:$$(yas/choose-value '(\".i18n\" \".dependent\" \".leaf\" \".sysauth\" ))}\n\n$0\n" "Entry (Generic)" nil nil nil nil nil nil)
					   ("subopt" "${1:optnName}${2:$$(yas/choose-value '(\".template \" \".enabled\" \".disabled\" \".depends\" \".optional\" \".default\" \".manditory\" \".additional\" \".add_error\" \".remove\"))}) = ${3:value} $0" "\"Flag\" Option Params" nil nil nil nil nil nil)
					   ("map" "${1:m} = Map(\"${2:config}\", translate(\"${3:title}\"), translate(\"${4:description}\"))\n$0\n\nreturn $1" "Generic Map Object" nil nil nil nil nil nil)
					   ("section" "${1:section}.${2:$$(yas/choose-value '(\"addremove\" \"dynamic\" \"optional\" \"template\" \".title\" \".description\"))} = ${3:true}$0\n\n" "Named Section (w/ Options/Paramiters)" nil nil nil nil nil nil)
					   ("option" "${1:option_name} = ${2:section_name}:option(\"${3:$$(yas/choose-value '(Value DummyValue Flag ListValue MultiValue StaticList DynamicList TextValue Button FileUpload FileBrowser))}\", \"${4:config_section}\", translate(\"${5:title}\"), translate(\"${6:description}\"))$0\n\n" "Option (generic)" nil nil nil nil nil nil)
					   ("section" "${1:s} = ${2:m}:section(${3:$$(yas/choose-value '(\"SimpleSection\" \"Table\" \"NamedSection\" \"TypedSection\"))}, \"${4:config}\", translate(\"${5:title}\"), translate(\"${6:description}\"))\n$0\n\n" "Section Entry (Generic)" nil nil nil nil nil nil)
					   ("section" "${1:section}${2:$$(yas/choose-value '(\".addremove\" \".dynamic\" \".optional\" \".template\" \".hidden\" \".title\" \".description\"))} = ${3:true}$0\n" "Simple Section Option/Param" nil nil nil nil nil nil)
					   ("section" "${1:section}${2:$$(yas/choose-value '(\".data\" \".rowcolors\" \".anonymous\" \".extedit\" \".errors\" \".addremove\" \".dynamic\" \".optional\" \".template\" \".template_addremove\" \".invalid_cts\" \".title\" \".description\"))} = ${3:true}$0\n" "Table Section Option/Param" nil nil nil nil nil nil)
					   ("entry" "entry(${1:path}, template(${2:cbi file loc}), title=translate(\"${3:Menu Title}\"), order=${4:10})${5:$$(yas/choose-value '(\".i18n\" \".dependent\" \".leaf\" \".sysauth\" ))}\n\n$0\n" "Template Entry call" nil nil nil nil nil nil)
					   ("section" "${1:section}${2:$$(yas/choose-value '(\".addremove\" \".dynamic\" \".optional\" \".anonymous\" \".validation\" \".sortable\" \".template\" \".filter(self, section)\" \":depends(key,value)\" \".title\" \".description\"))} = ${3:true}$0\n" "Typed Section (w/ Param/Option)" nil nil nil nil nil nil)
					   ("subopt" "${1:optnName}${2:$$(yas/choose-value '(\".template \" \":value(key, val)\" \".reset_values\" \".vallist\" \".keylist\" \".maxlength\" \".depends\" \".cast\" \".optional\" \".default\" \".rmempty\" \".size\" \".manditory\" \".additional\" \".add_error\" \".validate\" \".transform\" \".remove\" \".write\"))}) = ${3:value} $0\n" "\"Value\" Option Params" nil nil nil nil nil nil)
					   ("option" "${1:option_name} = ${2:section_name}:option(\"${3:$$(yas/choose-value '(Value DummyValue Flag ListValue MultiValue StaticList DynamicList TextValue Button FileUpload FileBrowser))}\", \"${4:config_section}\", translate(\"${5:title}\"), translate(\"${6:description}\"))$0\n\n" "Option (generic)" nil nil nil nil nil nil)
					   ("section" "${1:s} = ${2:map}:section(\"${3:$$(yas/choose-value '(SimpleSection Table NamedSection TypedSection))}\", \"${4:config_file}\", translate(\"${5:title}\"), translate(\"${6:description}\"))\n$0\n\n" "Section Object" nil nil nil nil nil nil)))


;;; Do not edit! File generated at Thu Jan  2 17:42:39 2014
